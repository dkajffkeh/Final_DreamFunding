<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
  <resultMap type="Member" id="memberResultSet">
  	<result column="member_no" property="memNo"/>
  	<result column="member_email" property="email"/>
  	<result column="member_pwd" property="memPwd"/>
  	<result column="member_nickname" property="memNick"/>
  	<result column="member_name" property="memName"/>
  	<result column="member_phone" property="phone"/>
  	<result column="member_createdate" property="memCreate"/>
  	<result column="member_gender" property="gender"/>
  	<result column="member_pf_path" property="memPfPath"/>
  	<result column="member_systemname" property="memSystemname"/>
  	<result column="member_status" property="memStatus"/>
  	<result column="member_link" property="memLink"/>
  	<result column="refres_token" property="refresToken"/>
  	<result column="access_token" property="accessToken"/>
  	<result column="status" property="status"/>
  </resultMap>
  <!-- 로그인 -->
  <select id="loginMember" 
  		  parameterType="Member"
  		  resultMap="memberResultSet">
	select
	  	   MEMBER_NO
		 , MEMBER_EMAIL
		 , MEMBER_PWD
		 , MEMBER_NICKNAME
		 , MEMBER_NAME
		 , MEMBER_PHONE
		 , MEMBER_CREATEDATE
		 , MEMBER_GENDER
		 , MEMBER_PF_PATH
		 , MEMBER_SYSTEMNAME
		 , MEMBER_STATUS
		 , MEMBER_LINK
		 , REFRES_TOKEN
		 , ACCESS_TOKEN
		 , STATUS
	  from member
	 where MEMBER_STATUS != 4
	   and member_email = #{ email }
  </select>
  <!-- 이메일 중복체크 -->
	<select id="emailCheck" parameterType="string" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM MEMBER
		 WHERE MEMBER_EMAIL = #{ email }
	</select>  
	<!-- 닉네임 중복체크 -->
	<select id="nickCheck" parameterType="string" resultType="_int">
		select
			   count(*)
		  from member
		 where MEMBER_NICKNAME = #{ memNick }
	</select>
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="Member">
		insert
			into member
			(
			  member_no
			, member_email
			, member_pwd
			, member_nickname
			, member_name
			, member_phone
			, member_createdate
			, member_gender
			, member_link

			)
			values
			(
			  SEQ_MNO.NEXTVAL
			, #{ email }
			, #{ memPwd }
			, #{ memNick }
			, #{ memName }
			, #{ phone }
			, SYSDATE
			, #{ gender }
			, 1
			)
	
	</insert>
	
	<!-- 아이디 찾기  -->
	<select id="memberList"
			parameterType="Member"
  		  resultMap="memberResultSet">
		select

		   MEMBER_EMAIL
		 , MEMBER_CREATEDATE
	  from member
	 where MEMBER_STATUS != 4
	   and MEMBER_NAME = #{ memName }
	   and member_phone = #{ phone }
	</select>
	
	<!-- 비밀번호 찾기 질문 (DAO까지는 값이 넘어오는데 여기는 값이 넘어오지 않는다.)-->
	  <select id="selectAddress" 
	  		  parameterType="string"
	  		  resultType="string">
		select
			   MEMBER_PWD
		  from member
		 where MEMBER_STATUS != 4
		   and member_email = #{ email }
	  </select>
	<!-- 아이디 찾기(질문) -->  
	
	
	
		<select id="selectEmail" 
	  		  parameterType="string"
	  		  resultType="string">
		select
			   MEMBER_EMAIL
		  from member
		 where MEMBER_STATUS != 4
		   and member_name = ${ memName }
	  </select>
	
	
	
	
	
	<select id="idFind" parameterType="Member" resultType="_int">
		select
			   count(*)
		  from member
		 where MEMBER_NAME = #{ memName }
		   and MEMBER_PHONE = #{ phone }
		   and MEMBER_STATUS != 4
	    
	</select>
	<!-- 회원정보 변경 -->
	<update id="updateProfile" parameterType="Member">
		update
		       member
		   set MEMBER_PF_PATH = #{memPfPath}
		     , MEMBER_SYSTEMNAME = #{memSystemname}
		 where MEMBER_EMAIL = #{email}
		   and MEMBER_STATUS != 4
	</update>
	<update id="updateNick" parameterType="Member">
		update
		       member
		   set MEMBER_NICKNAME = #{memNick}
		 where MEMBER_EMAIL = #{email}
		   and MEMBER_STATUS != 4
	</update>
	<update id="updatePwd" parameterType="Member">
		update
		       member
		   set member_pwd = #{ memPwd }
		 where MEMBER_EMAIL = #{ email }
		 and MEMBER_STATUS != 4
	</update>
	<update id="updatePhone" parameterType="Member">
		update
		       member
		   set MEMBER_PHONE = #{ phone }
		 where MEMBER_EMAIL = #{ email }
		 and MEMBER_STATUS != 4
	</update>
	<update id="deleteMember" parameterType="string">
		update
		       member
		   set status = '4'
		     , modify_date = sysdate
		 where MEMBER_PWD = #{memPwd}
	</update>
	
	

	
</mapper>
